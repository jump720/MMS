@model MMS.Models.PlantillaViewModel

@{
    ViewBag.Title = "Templates";
    ViewBag.Subtitle = "Create";
    Layout = "~/Views/Shared/_LayoutTT.cshtml";
}

@section Styles
{
    @Styles.Render("~/bundles/cssSelect2")
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jsSelect2")
    @Scripts.Render("~/bundles/jsVue")

    <script type="text/javascript">
        $(document).ready(function () {
            checkValidationSummaryErrors();

            var vueItemsTable = new Vue({
                el: "#tableItems",
                data: {
                    items: []
                },
                methods: {
                    remove: function (index) {
                        this.items.splice(index, 1);
                    }
                }
            });

            $("#selectBuscarItem").select2({
                placeholder: "Search Item to add",
                theme: "bootstrap",
                ajax: {
                    type: "GET",
                    url: function (params) {
                        return "/api/Plantillas/BuscarItem?q=" + encodeURIComponent(params.term)
                    },
                    delay: 300,
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        return {
                            results: $.map(data, function (item) {
                                if ($("#cardForm .codigo-item:contains('" + item.Codigo + "')").length > 0)
                                    return null;

                                return {
                                    text: item.Descripcion,
                                    id: item.Id,
                                    data: item
                                }
                            }),
                            pagination: {
                                more: (params.page * 30) < data.total_count
                            }
                        };
                    }
                },
                minimumInputLength: 1,
                templateResult: function (repo) {
                    if (repo.loading) return repo.text;
                    data = repo.data;

                    return '<div class="select2-result-repository clearfix">' +
                                `<div><b>${data.Codigo} - ${data.Descripcion}</b></div>` +
                                "<div>" +
                                    `<small>Category: ${data.Categoria}</small><br>` +
                                    `<small>Group: ${data.Grupo}</small><br>` +
                                    `<small>$ ${data.PrecioSugerido}</small>` +
                                "</div>" +
                            '</div>';
                },
                formatSelection: function (repo) {
                    return repo.Nombre || repo.text;
                },
                escapeMarkup: function (m) { return m; }
            });

            $("#selectBuscarItem").on('select2:select', function (e) {
                if ($(this).select2('data').length == 0)
                    return;

                var data = $(this).select2('data')[0].data;
                vueItemsTable.items.push(data);

                $(this).val("").change();
            });

            $("#Plantilla_Nombre").focus();
        });
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row clearfix">
        <div class="col-md-12">
            <div class="card" id="cardForm">
                <div class="header bg-blue">
                    <h2>
                        @ViewBag.Title <small>@ViewBag.Subtitle</small>
                    </h2>
                </div>
                <div class="body">
                    @Html.ValidationSummary(true, "", new { @class = "hide" })

                    <div class="row clearfix">
                        <div class="col-md-6">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.Plantilla.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.LabelFor(model => model.Plantilla.Nombre, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Plantilla.Nombre, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Plantilla.Activa)
                            @Html.LabelFor(model => model.Plantilla.Activa, htmlAttributes: new { @class = "fix-checkbox" })
                        </div>

                        <div class="col-md-12">
                            <select id="selectBuscarItem" class="ms full-width"></select>
                        </div>

                        <div class="col-md-12">
                            <table class="table table-condensed table-hover table-striped table-va-middle" id="tableItems">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.PlantillaItems[0].Item.Marca)</th>
                                        <th>@Html.DisplayNameFor(model => model.PlantillaItems[0].Item.Codigo)</th>
                                        <th>@Html.DisplayNameFor(model => model.PlantillaItems[0].Item.Categoria)</th>
                                        <th>@Html.DisplayNameFor(model => model.PlantillaItems[0].Item.Grupo)</th>
                                        <th>@Html.DisplayNameFor(model => model.PlantillaItems[0].Item.Descripcion)</th>
                                        <th style="text-align: right;">@Html.DisplayNameFor(model => model.PlantillaItems[0].Item.PrecioSugerido)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <template v-if="items.length == 0">
                                        <tr class="align-center">
                                            <td colspan="7"><em>This template has no Items.</em></td>
                                        </tr>
                                    </template>
                                    <template v-else>
                                        <tr v-for="(item, index) in items">
                                            <td>{{ item.Marca }}</td>
                                            <td>
                                                <input type="hidden" v-bind:name="'PlantillaItems[' + index + '].ItemId'" v-bind:value="item.Id" />
                                                <span class="codigo-item">{{ item.Codigo }}</span>
                                            </td>
                                            <td>{{ item.Categoria }}</td>
                                            <td>{{ item.Grupo }}</td>
                                            <td>{{ item.Descripcion }}</td>
                                            <td style="text-align: right;">$ {{ item.PrecioSugerido.formatMoney(0) }}</td>
                                            <td><a v-on:click.prevent="remove(index)" class='bg-red btn-sm btn-sm-circle waves-circle waves-effect waves-float btn-table'><i class='material-icons'>delete</i></a></td>
                                        </tr>
                                    </template>
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
                <hr class="m-b-0 m-t--20" />
                <div class="body">
                    <input type="submit" value="Save" class="btn btn-primary waves-effect" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default waves-effect", @onclick = "redirToReturnSearch(this, event)" })
                </div>
            </div>
        </div>
    </div>
}