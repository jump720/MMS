@model IEnumerable<MMS.Models.Gasto>


@{
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ViewBag.Title = "Spent";
    ViewBag.Subtitle = "List";
    Layout = "~/Views/Shared/_LayoutTT.cshtml";
}


@section Styles
{
    @Styles.Render("~/bundles/cssDataTables")
    @Styles.Render("~/bundles/cssSelect2")
}


@section Scripts
{
    @Scripts.Render("~/bundles/jsDataTables")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jsSelect2")
    <script type="text/javascript">
        $(document).ready(function () {

            $('[data-toggle="tooltip"]').tooltip();

            dt = dataTablesIndex("tableDT", "/api/@controllerName/Index", "/@controllerName/Index",
                [
                    { data: "GastoId" },
                    { data: "ActividadId" },
                    { data: "ActividadTitulo" },
                    {
                        data: "ClienteId",
                        render: function (data, type, row) {
                            if (row.ClienteId != null)
                                return `(${row.ClienteId}) - ${row.ClienteRazonSocial}`
                            else
                                return "";
                        }
                    },
                    {
                        data: "ProductoId",
                        render: function (data, type, row) {
                            if (row.ProductoId != null)
                                return `(${row.ProductoId}) - ${row.ProductoDesc}`
                            else
                                return "";
                        }
                    },
                    {
                        data: "CentroCostoID",
                        render: function (data, type, row) {
                            if (row.CentroCostoID != null)
                                return `(${row.CentroCostoID}) - ${row.CentroCostoDesc}`
                            else
                                return "";
                        }
                    },
                    {
                        data: "GastoValor",
                        render: function (value) {
                            return `<div class="text-right">$ ${value.formatMoney(2)}</div>`;
                        }
                    },
                    {
                        data: "GastoCant",
                        render: function (value) {
                            return `<div class="text-right">${value.formatMoney(2)}</div>`;
                        }
                    },
                    { data: "GastoEstado" },
                    {
                        data: "",
                        render: function (data, type, row) {
                            var result = `<a href='/@controllerName/Details?Id=${row.GastoId}&Linea=${row.GastoLinea}' onclick="GastosModal(event, this.href);"class='btn-table btn-info btn-sm btn-sm-circle waves-circle waves-effect waves-float @ViewData[$"has_{controllerName}Details"]' data-toggle="tooltip" data-placement="top" title="View"><i class='material-icons'>remove_red_eye</i></a>`;

                            if (row.GastoEstado != "Pagado" && row.GastoEstado != "Rechazado" && row.GastoEstado != "Eliminado") {
                                result += `<a href='/@controllerName/Edit?Id=${row.GastoId}&Linea=${row.GastoLinea}' onclick="GastosModal(event, this.href);" class='btn-table btn-primary btn-sm btn-sm-circle waves-circle waves-effect waves-float @ViewData[$"has_{controllerName}Edit"]' data-toggle="tooltip" data-placement="top" title="Modify"><i class='material-icons'>mode_edit</i></a>` +
                                `<a href='javascript:void(0)' onclick="ChangeStatus(${row.GastoId}, ${row.GastoLinea}, 5);" class='btn-table bg-green btn-sm btn-sm-circle waves-circle waves-effect waves-float @ViewData[$"has_{controllerName}CambioEstado"]' data-toggle="tooltip" data-placement="top" title="Change to Paid"><i class='material-icons'>payment</i></a>`;
                            }

                            return result;
                        }
                    }
                ]);

        });

        function GastosModal(event, href) {
            ajaxModal(event, href, 4, {
                static: true,
                fnShown: function () {
                    $.MMS.Gastos.init();
                },
                fnHidden: function () {
                    dt.api().draw('page');
                }
            });
        }

        function CambiaEstadoGasto(GastoId, GastoLinea, Estado) {
            $.ajax({
                url: "../Gastos/CambioEstadoGasto",
                type: "GET",
                data: { GastoId: GastoId, GastoLinea: GastoLinea, Estado: Estado },
                dataType: 'text',
                success: function (result) {

                    if (result) {
                        Materialize.toast("Se cambio a estado Pagado el Gasto " + GastoId + " con Linea: " + GastoLinea, 2000, '', function () { window.location.href = '/Gastos' });
                    } else {
                        Materialize.toast("Error al cambiar de estado", 5000, '');
                    }
                },
                beforeSend: function () {
                    $("#Loading").openModal({
                        dismissible: false
                    });
                },
                complete: function () {
                    $("#Loading").closeModal();
                },
                error: function (xhr, status) {
                    Materialize.toast(status, 4000, '', function () { $("#Loading").closeModal(); });


                }
            });

        };


        function ChangeStatus(Id, Linea, Estado) {
            swal({
                title: "Confirmation",
                text: "This spent will change to paid, and you will not be able to modify it anymore.",
                type: "warning",
                showCancelButton: true,
                closeOnConfirm: false,
                showLoaderOnConfirm: true,
            }, function () {


                $.post("../Api/Gastos/CambioEstado?Id=" + Id + "&Linea=" + Linea + "&Estado=5")
                    .done(function (result) {

                        if (result.Res) {
                            swal.close();
                            msgSuccess(result.Msg);
                            dt.api().draw('page');
                        }
                        else {
                            msgError(result.Msg);
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        msgError(errorThrown);
                    })
                    .always(function () {
                        swal.close();

                    });


            });
        }
    </script>
}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="header bg-blue">
                <table>
                    <tr>
                        <td>
                            <a href="/@controllerName/Create" data-toggle="tooltip" data-placement="bottom" title="Create" class="btn btn-default btn-circle waves-effect waves-circle waves-float @ViewData[$"has_{controllerName}Create"]" onclick="GastosModal(event, this.href);">
                                <i class="material-icons" style="color:black !important">add</i>
                            </a>
                        </td>
                        <td style="padding-left: 10px">
                            <h2>
                                @ViewBag.Title <small>@ViewBag.Subtitle</small>
                            </h2>
                        </td>
                    </tr>
                </table>

            </div>
            <div class="body">
                <table id="tableDT" class="table table-bordered table-striped table-hover dataTable table-condensed table-va-middle">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.GastoId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ActividadId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.actividad.ActividadTitulo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.actividad.ClienteID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ProductoId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CentroCostoID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.GastoValor)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.GastoCant)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.GastoEstado)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>