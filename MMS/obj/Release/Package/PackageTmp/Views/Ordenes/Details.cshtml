@model  MMS.Models.Orden

@{
    ViewBag.Title = "Ordenes";
    ViewBag.Subtitle = "Detail";
    Layout = "~/Views/Shared/_LayoutTT.cshtml";
}

@section Styles
{
    @Styles.Render("~/bundles/cssDataTables")
}

@section Scripts
{
    @Scripts.Render("~/bundles/jsDataTables")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="/Content/dist/plugins/jquery-inputmask/jquery.inputmask.bundle.js"></script>
    <script src="~/Scripts/jquery.number/jquery.number.js" type="text/javascript"></script>
    <script src="~/Scripts/Transacciones/Ordenes.js" type="text/javascript"></script>

    @if (Model != null)
    {
        <script type="text/javascript">
            /*
             * Insert = 1,
             * Update = 2,
             * Delete = 3,
             * Display = 4
             */
            var dataList = @Html.Raw(Json.Encode(ViewBag.OrdenItems));
            var TrnMode = 4;
        </script>
    }
}

<div class="row">

    <div class="col-md-12">
        <div class="card" id="cardForm">
            <div class="header bg-blue">
                <h2>
                    @ViewBag.Title <small>@ViewBag.Subtitle</small>
                </h2>
            </div>
            @if (Model != null)
            {
                <div class="body">
                    <div class="row">
                        <div class="col-md-1">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.OrdenId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.OrdenId, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.OrdenId, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.OrdenEstado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.OrdenEstado, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.OrdenEstado, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.OrdenFecha, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = Model.OrdenFecha.ToString("u").Substring(0, 10) } })
                                    @Html.LabelFor(model => model.OrdenFecha, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.OrdenFecha, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.OrdenFechaModificacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = Model.OrdenFechaModificacion.ToString("u").Substring(0, 10) } })
                                    @Html.LabelFor(model => model.OrdenFechaModificacion, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.OrdenFechaModificacion, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.OrdenFechaDespacho, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = Model.OrdenFechaDespacho.ToString("u").Substring(0, 10) } })
                                    @Html.LabelFor(model => model.OrdenFechaDespacho, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.OrdenFechaDespacho, "", new { @class = "" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.ActividadId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.ActividadId, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.ActividadId, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.UsuarioIdModifica, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.UsuarioIdModifica, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.UsuarioIdModifica, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.OrdenNroGuia, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.OrdenNroGuia, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.OrdenNroGuia, "", new { @class = "" })
                            </div>
                        </div>
                    </div>

                    <div class="row clearfix">
                        <div class="col-md-12 m-b-0">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextAreaFor(model => model.OrdenComentario, new { @class = "form-control", @rows = "3", @readonly = "readonly" })
                                    @Html.LabelFor(model => model.OrdenComentario, htmlAttributes: new { @class = "form-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.OrdenComentario, "", new { @class = "" })
                            </div>
                        </div>
                    </div>

                    <fieldset>
                        <legend class="m-b-0 font-18">Productos</legend>
                        <input type="text" id="nroTableOrdenItems" name="nroTableOrdenItems" style="display: none" value="0" />
                        <table id="TableOrdenItems" class="table table-condensed table-bordered">
                            <thead>
                                <tr>
                                    <th>Linea</th>
                                    <th>Producto</th>
                                    <th>Descripción</th>
                                    <th>Valor</th>
                                    <th>Cant.</th>
                                    <th>Cant Confirmada</th>
                                    <th>Mov.</th>
                                    <th>C. Costo</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </fieldset>
                </div>
                <hr class="m-b-0 m-t--20" />
                <div class="body">
                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default waves-effect", @onclick = "redirToReturnSearch(this, event)", @id = "btnCancelOrd" })
                    @{var NewOrdenEstado = (int)Model.OrdenEstado + 1;}
                    @if (Model.OrdenEstado == MMS.Models.EstadoOrden.Abierta)
                    {
                        <input type="submit" value="Poner Por Despachar" class="btn waves-effect btn-success accent-4" onclick="CambiaEstado('@Model.OrdenId', '@NewOrdenEstado');" />
                    }
                    else if (Model.OrdenEstado == MMS.Models.EstadoOrden.Por_despachar && !string.IsNullOrEmpty(Model.OrdenNroGuia))
                    {
                        <input type="submit" value="Despachar" class="btn waves-effect btn-success accent-4" onclick="CambiaEstado('@Model.OrdenId', '@NewOrdenEstado');" />
                    }
                </div>
            }
            else
            {
                <div class="body">
                    <h4>@ViewBag.Error</h4>
                </div>
                <hr class="m-b-0 m-t--20" />
                <div class="body">
                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default waves-effect", @onclick = "redirToReturnSearch(this, event)", @id = "btnCancelOrd" })
                </div>
            }
        </div>
    </div>
</div>