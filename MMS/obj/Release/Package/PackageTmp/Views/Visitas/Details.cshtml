
@model MMS.Models.VisitasViewModel
@{
    ViewBag.Title = "Visits";
    ViewBag.Subtitle = "View";

    Layout = "~/Views/Shared/_LayoutTT.cshtml";

}
@section Styles
{
    @Styles.Render("~/bundles/cssSelect2")
    @Styles.Render("~/Content/Dropzone")
    @Styles.Render("~/Content/TagsInput")
    @Styles.Render("~/content/lightGallery")
    <link href="/Content/dist/plugins/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" rel="stylesheet" />
    <style>
        .thumbnail {
            -webkit-border-radius: 0;
            -moz-border-radius: 0;
            -ms-border-radius: 0;
            border-radius: 0;
        }

            .thumbnail p:not(button) {
                color: #999999;
                font-size: 14px;
            }

            .thumbnail h3 {
                font-weight: bold;
                font-size: 17px;
            }
    </style>
}

@section Scripts
{
    @Scripts.Render("~/bundles/jsDataTables")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Dropzone")
    @Scripts.Render("~/bundles/TagsInput")
    @Scripts.Render("~/bundles/lightGallery")
    @Scripts.Render("~/bundles/jsSelect2")
    @Scripts.Render("~/bundles/jsVue")
    <script src="/Content/dist/plugins/jquery-inputmask/jquery.inputmask.bundle.js"></script>
    <script src="~/Scripts/PerfectStore/Visitas.js"></script>
    <script src="/Content/dist/plugins/momentjs/moment.js"></script>
    <script src="/Content/dist/plugins/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js"></script>



    <script type="text/javascript">
        $(function () {

            $('[data-toggle="tooltip"]').tooltip();

            var photos = [ @foreach (var file in Model.VisitaFotos)
            {

                <text>
                { order: @file.Order, FileName: `@file.FileName`, New: false, Url: `/Visitas/FotoGeneral?v=@Model.Visita.Id&o=@file.Order&s=800` },
                </text>
            }
            ];

            $.MMS.Visitas("details", photos,@ViewBag.TipoIndustriaAutomotriz);
        });


    </script>
}


<div class="row clearfix">
    <div class="col-md-12">
        <div class="card" id="cardForm">
            <div class="header bg-blue">
                <h2>
                    @ViewBag.Title <small>@ViewBag.Subtitle</small>
                </h2>
            </div>
            <div class="body">

                @Html.HiddenFor(model => model.Visita.Id)
                @Html.HiddenFor(model => model.Visita.Latitud)
                @Html.HiddenFor(model => model.Visita.Longitud)
                @Html.HiddenFor(model => model.Visita.FechaConfirmacion, new { @Value = DateTime.Today.ToString("u").Substring(0, 10) })
                @Html.HiddenFor(model => model.Visita.Activa, new { @Value = true })
                @Html.HiddenFor(model => model.Visita.Completada, new { @Value = false })


                <div class="row clearfix">
                    <div class="col-md-3">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.UsuarioId, new { htmlAttributes = new { @Value = ViewBag.UsuarioId, @Hidden = "Hidden" } })
                                <input id="UsuarioNombre" value="@ViewBag.UsuarioNombre" class="form-control" readonly="readonly" />
                                <label for="UsuarioNombre" class="form-label active">User</label>
                                @*@Html.LabelFor(model => model.Visita.UsuarioId, htmlAttributes: new { @class = "form-label" })*@

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @if (Model.Visita != null)
                                {
                                    @Html.EditorFor(model => model.Visita.Fecha, new { htmlAttributes = new { @class = "form-control", @Value = Model.Visita.Fecha.ToString("u").Substring(0, 10) } });
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.Visita.Fecha, new { htmlAttributes = new { @class = "form-control" } });
                                }
                                @Html.LabelFor(model => model.Visita.Fecha, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @*@Html.LabelFor(model => model.Visita.TipoVisitaId, htmlAttributes: new { @class = "form-select-label" })*@
                                @Html.DropDownList("Visita.TipoVisitaId", null, "Seleccione una opción", new { @class = "ms full-width form-control", @style = "width: 100%" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @*@Html.LabelFor(model => model.Visita.TipoIndustriaId, htmlAttributes: new { @class = "form-select-label" })*@
                                @Html.DropDownList("Visita.TipoIndustriaId", null, "Seleccione una opción", new { @class = "ms full-width", @style = "width: 100%" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 clearfix">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @if (Model.Visita == null)
                                {
                                    @Html.EditorFor(model => model.Visita.Nit, new { htmlAttributes = new { @class = "form-control" } })
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.Visita.Nit, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                }
                                @Html.LabelFor(model => model.Visita.Nit, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.Dv, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.LabelFor(model => model.Visita.Dv, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 ">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @if (Model.Visita == null)
                                {
                                    @Html.EditorFor(model => model.Visita.NombreEstablecimiento, new { htmlAttributes = new { @class = "form-control" } })
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.Visita.NombreEstablecimiento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                }
                                @Html.LabelFor(model => model.Visita.NombreEstablecimiento, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 ">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.Visita.RazonSocial, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 ">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.Administrador, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.Visita.Administrador, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 ">
                        <div class="input-group form-float">
                            <span class="input-group-addon">
                                <i class="material-icons">phone</i>
                            </span>
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.Telefono, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = Html.DisplayNameFor(model => model.Visita.Telefono) } })
                                @*@Html.LabelFor(model => model.Visita.Telefono, htmlAttributes: new { @class = "form-label" })*@

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-4" id="paisContainer">
                        <div class="form-group form-float">
                            <div class="input-group">
                                <div class="form-line">
                                    @Html.LabelFor(model => model.Visita.PaisId, htmlAttributes: new { @class = "form-select-label" })
                                    @*@Html.DropDownList("Visita.PaisId", null, new { @class = "ms full-width", @onchange = "_DDLocation('PaisID'+';'+'Visita_DepartamentoId')" })*@
                                    @Html.DropDownListFor(model => model.Visita.PaisId, null, "", new { @class = "ms full-width", @onchange = "_DDLocation('PaisID'+';'+'Visita_DepartamentoId')" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-md-4" id="dptoContainer">
                        <div class="form-group form-float">
                            <div class="input-group">
                                <div class="form-line">
                                    @Html.LabelFor(model => model.Visita.DepartamentoId, htmlAttributes: new { @class = "form-select-label" })
                                    @*<select id="Visita_DepartamentoId" name="Visita.DepartamentoId" class="ms full-width" style="width: 100%" onchange="_DDLocation('DepartamentoID' + ';' + 'Visita_CiudadId' + ';' + 'Visita_PaisId')"></select>*@
                                    @Html.DropDownListFor(model => model.Visita.DepartamentoId, null, "", new { @class = "ms full-width", @onchange = "_DDLocation('DepartamentoID'+';'+'Visita_CiudadId' + ';' + 'Visita_PaisId')" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-md-4" id="ciudadContainer">
                        <div class="form-group form-float">
                            <div class="input-group">
                                <div class="form-line">
                                    @Html.LabelFor(model => model.Visita.CiudadId, htmlAttributes: new { @class = "form-select-label" })
                                    @*<select id="Visita_CiudadId" name="Visita.CiudadId" class="ms full-width" style="width: 100%"></select>*@
                                    @Html.DropDownListFor(model => model.Visita.CiudadId, null, "", new { @class = "ms full-width" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="row clearfix">

                    <div class="col-md-5 ">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.Visita.Direccion, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.Barrio, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.Visita.Barrio, htmlAttributes: new { @class = "form-label" })

                            </div>
                        </div>

                    </div>
                    <div class="col-md-2">
                        <div class="form-group form-float">
                            <button type="button" class="btn bg-grey btn-circle-lg waves-effect waves-circle waves-float" onclick="GetLocation()" disabled>
                                <i class="material-icons" id="locationico">location_searching</i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-3">
                        <div class="input-group form-float">
                            <span class="input-group-addon">
                                <i class="material-icons">attach_money</i>
                            </span>
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.VentaRealizada, new { htmlAttributes = new { @class = "form-control text-right", @PlaceHolder = Html.DisplayNameFor(model => model.Visita.VentaRealizada) } })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.EditorFor(model => model.Visita.NumeroMecanicos, new { htmlAttributes = new { @class = "form-control text-right", @type = "number" } })
                                @Html.LabelFor(model => model.Visita.NumeroMecanicos, htmlAttributes: new { @class = "form-label" })
                                @Html.ValidationMessageFor(model => model.Visita.NumeroMecanicos, "", new { @class = "" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Visita.DisponibilidadProducto)
                        @Html.LabelFor(model => model.Visita.DisponibilidadProducto, htmlAttributes: new { @class = "fix-checkbox" })
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @*@Html.LabelFor(model => model.Visita.Marcas, htmlAttributes: new { @class = "form-select-label" })*@
                                @*<select id="Visita_CiudadId" name="Visita.CiudadId" class="ms full-width" style="width: 100%"></select>*@
                                @Html.DropDownList("Marcas", null, new { @class = "ms full-width", @multiple = "multiple" })
                                @Html.HiddenFor(model => model.Visita.Marcas)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.TextAreaFor(model => model.Visita.Comentarios, new { @class = "form-control", @rows = "5" })
                                @Html.LabelFor(model => model.Visita.Comentarios, htmlAttributes: new { @class = "form-label" })
                            </div>

                        </div>
                    </div>
                    <div class="col-md-12">
                        <ul class="nav nav-tabs" role="tablist">
                            <li role="presentation" class="active">
                                <a href="#fotos_tab" data-toggle="tab">
                                    <i class="material-icons">photo_album</i> Fotos Generales
                                </a>
                            </li>

                        </ul>
                        <div class="tab-content">
                            <div role="tabpanel" class="tab-pane fade in active" id="fotos_tab">
                                <div id="ListPhotos">
                                    <div class="card">
                                        <div class="header">
                                            <h5>Photos</h5>
                                        </div>
                                        <div class="body">
                                            <template v-if="photos.length == 0">
                                                <div class="col-md-12">
                                                    <em>This template has no photos.</em>
                                                </div>
                                            </template>
                                            <template v-else>
                                                <div id="photos-thumb" class="list-unstyled row clearfix">
                                                    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 text-center" v-for="(f, idx) in photos" v-if="!f.New" v-bind:id="'photo' + f.order">
                                                        <a v-bind:href="f.Url" data-sub-html="photo">
                                                            <div>
                                                                <img class="img-responsive thumbnail" v-bind:src="f.FileName" style="height: 250px;display: unset !important;">
                                                            </div>
                                                        </a>
                                                    </div>
                                                </div>
                                            </template>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <hr class="m-b-0 m-t--20" />
            <div class="body">
                @if (!Model.Visita.Completada)
                {
                    @Html.ActionLink("Modify", "Edit", new { id = Model.Visita.Id }, new { @class = "btn btn-success waves-effect " + ViewData[$"has_{ViewContext.RouteData.Values["controller"].ToString()}Edit"] })
                }
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default waves-effect", @onclick = "redirToReturnSearch(this, event)" })
            </div>
        </div>
    </div>
</div>
