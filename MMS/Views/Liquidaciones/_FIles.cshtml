@model MMS.Models.Liquidacion

@{
    MMS.Models.LiquidacionArchivo liquidacionArchivoModel = null;
}

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $(document).ready(function () {
        var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';

        $('[data-toggle="tooltip"]').tooltip();

        var vueFilesTable = new Vue({
            el: "#tableArchivos",
            data: {
                files: []
            },
            methods: {
                remove: function (index, fileId) {
                    var vm = this;
                    swal({
                        title: "Confirmation",
                        text: "All sellers uploaded with this file will be deleted. Are you sure you want to delete this file?.",
                        type: "warning",
                        showCancelButton: true,
                        closeOnConfirm: false,
                        showLoaderOnConfirm: true,
                    }, function () {
                        $.post("/api/Liquidaciones/DeleteFile/" + fileId)
                            .done(function (result) {
                                if (result) {
                                    swal.close();
                                    msgSuccess("File deleted.");
                                    vm.files.splice(index, 1);
                                }
                                else
                                    msgError(`Error deleting File`);
                            })
                            .fail(function (jqXHR, textStatus, errorThrown) {
                                msgError(errorThrown);
                            });
                    });
                }
            }
        });

        $.get("/api/Liquidaciones/Files/@Model.Id")
            .done(function (result) {
                if (result)
                    vueFilesTable.files = result;
                else
                    msgError(`Error loading Files`);
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                msgError(errorThrown);
            });

        $.get("/api/ColeccionesPIV/Get")
            .done(function (result) {
                if (result) {
                    result = result.map(function (item) {
                        return { id: item.Id, text: item.Nombre, data: item };
                    });

                    $("#liquidacionArchivoModel_ColeccionPIVId").select2({
                        placeholder: "Select PIP Collection",
                        theme: "bootstrap",
                        data: result,
                        templateResult: function (state) {
                            if (!state.id)
                                return state.text;

                            var $state = $(
                                '<div class="select2-result-repository clearfix">' +
                                    `<div><b>${state.data.Nombre}</b></div>` +
                                    "<div>" +
                                        `<small>Club of Excellence: ${state.data.CDE ? "Yes" : "No"}</small><br>` +
                                    "</div>" +
                                '</div>'
                                );
                            return $state;
                        }
                    }).val("").change().next().css("width", "");
                }
                else
                    msgError(`Error loading PIP Collections`);
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                msgError(errorThrown);
            });

        $("#btnAddFile").click(function (e) {
            e.preventDefault();

            $("#archivosContent").animateCss("bounceOut", function (animated) {
                $(animated).hide();
                $("#addArchivoContent").show();
                $("#addArchivoContent").animateCss("bounceIn");
            });
        });

        $("#btnCancelFile").click(function (e) {
            $("#addArchivoContent").animateCss("bounceOut", function (animated) {
                $(animated).hide();
                $("#archivosContent").show();
                $("#archivosContent").animateCss("bounceIn");
            });
        });

        $("#frmLiquidacionArchivo").submit(function (e) {
            e.preventDefault();

            if (!$(this).valid())
                return;

            var data = new FormData();
            data.append("File", $("#File").get(0).files[0]);

            sLoading();
            $.ajax({
                type: this.method,
                url: this.action + "?desc=" + encodeURIComponent($("#liquidacionArchivoModel_Descripcion").val()) + "&coleccionPIVId=" + $("#liquidacionArchivoModel_ColeccionPIVId").val(),
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    if (result.Res) {
                        hModal(getCurrentModalId());
                        msgSuccess(`File uploaded.`);
                    }
                    else {
                        if (result.Msg == "validation") {
                            msgError("Validation errors were found.");

                            $("#" + getCurrentModalId() + " .modal-dialog").addClass("modal-lg");

                            $("#addArchivoContent").animateCss("bounceOut", function (animated) {
                                $(animated).hide();
                                $("#validationErrorsContent").show();
                                $("#validationErrorsContent").animateCss("bounceIn");
                            });

                            var errors = '<ul style="max-height: 80vh;overflow-y: auto;">';
                            for (var i in result.Data)
                                errors += "<li>" + result.Data[i] + "</li>";

                            errors += "</ul>"

                            $("#validationErrorsContent .modal-body").append(errors);
                        }
                        else
                            msgError(result.Msg);
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    msgError(errorThrown);
                },
                complete: function () {
                    hLoading();
                }
            });
        });
    });
</script>

<div id="archivosContent">
    <div class="modal-header">
        <button type="button" class="close btn-link" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <table>
            <tr>
                <td>
                    @if (Model.Estado == MMS.Models.EstadoLiquidacion.Open)
                    {
                        <a id="btnAddFile" data-toggle="tooltip" data-placement="bottom" title="Files" class="btn btn-default btn-circle waves-effect waves-circle waves-float">
                            <i class="material-icons" style="color:black !important">add</i>
                        </a>
                    }
                </td>
                <td style="padding-left: 10px">
                    <h4 class="modal-title">Files : @Model.Descripcion</h4>
                </td>
            </tr>
        </table>
    </div>

    <div class="modal-body" style="padding-top: 0px;">
        <br />
        <table id="tableArchivos" class="table table-bordered table-hover table-condensed table-striped table-va-middle">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => liquidacionArchivoModel.ColeccionPIVId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => liquidacionArchivoModel.Descripcion)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => liquidacionArchivoModel.FechaSubida)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => liquidacionArchivoModel.UsuarioId)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <template v-if="files.length == 0">
                    <tr class="align-center">
                        <td colspan="3"><em>This Settlement has no Files.</em></td>
                    </tr>
                </template>
                <template v-else>
                    <tr v-for="(file, index) in files">
                        <td>{{ file.ColeccionPIVNombre }}</td>
                        <td>{{ file.Descripcion }}</td>
                        <td>{{ file.FechaSubida }}</td>
                        <td>{{ file.UsuarioNombre }}</td>
                        <td>
                            @if (Model.Estado == MMS.Models.EstadoLiquidacion.Open)
                            {
                                <a v-on:click.prevent="remove(index, file.Id)" class='btn-table bg-red btn-sm btn-sm-circle waves-circle waves-effect waves-float'><i class='material-icons'>delete</i></a>
                            }
                        </td>
                    </tr>
                </template>
            </tbody>
        </table>
    </div>

    <div class="modal-footer">
    </div>
</div>
<div id="addArchivoContent" style="display: none;">
    @using (Html.BeginForm("UploadFile/" + Model.Id, "api/Liquidaciones", FormMethod.Post, new { id = "frmLiquidacionArchivo" }))
    {
        <div class="modal-header">
            <button type="button" class="close btn-link" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">Add File : @Model.Descripcion</h4>
        </div>

        <div class="modal-body">
            <div class="row clearfix">

                <div class="col-md-12">
                    <div class="row clearfix">

                        <div class="col-md-6 m-t--10">
                            <div class="form-group">
                                @Html.LabelFor(model => liquidacionArchivoModel.ColeccionPIVId, new { @class = "form-select-label" })
                                @Html.DropDownListFor(model => liquidacionArchivoModel.ColeccionPIVId, new SelectList(new List<string>(), "", ""), new { @class = "ms full-width" })
                                @Html.ValidationMessageFor(model => liquidacionArchivoModel.ColeccionPIVId, "", new { @class = "" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.LabelFor(model => liquidacionArchivoModel.Descripcion, new { @class = "form-label" })
                                    @Html.EditorFor(model => liquidacionArchivoModel.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => liquidacionArchivoModel.Descripcion, "", new { @class = "" })
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-md-12">
                    <input type="file" name="File" id="File" accept="application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" data-val="true" data-val-required="The File field is required." />
                    @Html.ValidationMessage("File", new { @class = "" })
                </div>
            </div>
        </div>

        <hr class="m-b-0 m-t-0" />

        <div class="modal-footer">
            <a href="/Liquidaciones/BaseFile" target="_blank" class="btn btn-success waves-effect pull-left">Download Base File</a>
            <button type="submit" class="btn btn-primary waves-effect">Upload</button>
            <button type="button" class="btn btn-default waves-effect" id="btnCancelFile">Back to Files List</button>
        </div>
    }
</div>
<div id="validationErrorsContent" style="display: none;">
    <div class="modal-header">
        <button type="button" class="close btn-link" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Validation Errors</h4>
    </div>
    <div class="modal-body">

    </div>
</div>